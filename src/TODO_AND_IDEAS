TODO
- restructure the code. There is lots of code in places that it should not be.
	First thing to do is to define how it should be...
	- figure out how to bind a key to the menu functionality (F10 in tilde).
		To some extent this can be left to the user, as the most common place
		for the menu bar is the main window anyway, which has to be overriden
		anyway.
	- adding key-bindings can be done through deriving from a class and
		overriding process_key
	- perhaps it is a good idea to let the user define short-cuts for things
		like calling the insert_char_dialog. Forcing F9 may not be a great idea.
		On the other hand, enforcing a standard can also be good.

- rename the multi_string_list_i interface to something ending in _t
- rename main_window_t
- remove anything not related to the external interface from the externally
	used header files

IDEAS
- use a line_factory_t for the text_buffer_t, such that lines with extensions
	for e.g. syntax highlighting can be created.
- much of the text_buffer_t interface should be made virtual to allow
	proper overriding
- many widgets can be made aggregated types, rather than pointers. This does
	mean calling the constructor from the initializer list.
- the current content list stuff and file_pane_t interface are messy. This
	definately need more work.

THOUGHTS
- we won't do layout management. For most things the anchoring does what we
	want. Furthermore, most dialogs don't resize also because the user can not
	resize windows. So for those few cases where we do actually need it, the
	programmer can do it by overriding the set_size() call.
